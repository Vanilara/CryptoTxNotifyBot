services:
  base:
    build:
      context: .
      dockerfile: Dockerfile.base
    image: crypto-notifier-base
    profiles: [""]

  bot:
    build:
      context: .
      dockerfile: Dockerfile.bot
    container_name: bot
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    env_file:
      - .env
    depends_on:
      - base
      - postgres
    networks:
      - app_network
    profiles: [""]

  fastapi:
    build:
      context: .
      dockerfile: Dockerfile.fastapi
    container_name: fastapi
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app/src
    depends_on:
      - base
    networks:
      - app_network
    ports:
      - "5001:5001"
    
    profiles: [""]

  postgres:
    image: postgres:17.0
    container_name: postgres
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
    profiles: ["", "dev"]

  pgadmin:
    image: dpage/pgadmin4:8.12
    container_name: pgadmin
    restart: unless-stopped
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASS}
      - PGADMIN_CONFIG_SERVER_MODE=False
      - PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=False
    ports:
      - "8080:80"
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin4/storage
    networks:
      - app_network
    profiles: ["", "dev"]

volumes:
  postgres_data:
  pgadmin_data:

networks:
  app_network:
    driver: bridge